<section class="board-container">
<% if @game.check?(@game.player_color(@current_player)) %>
  <% if @game.checkmate?(@game.player_color(@current_player)) %>
    <div class="alert alert-danger">
        <strong>Checkmate</strong> <%=@game.player_color(@current_player)%> loses!
    </div>
  <% else %>
    <div class="alert alert-danger">
        <strong>Check</strong> <%=@game.current_turn%> is in check by <%=@game.show_checking_piece%>
    </div>
  <% end %>
<% end %>
  <div class="board" data-game-id="<%= @game.id %>">
    <% if @current_player.id == @game.white_player_id %>
      <% 7.downto(0) do |row| %>
        <div class="row <%= row.even? ? 'even' : 'odd' %>">
          <% 8.times do |column| %>
            <div class="square" data-x-coord="<%=column%>" data-y-coord="<%=row%>">
               <% if @pieces.where(x_coord: column, y_coord: row).present? %>
                  <span class="piece" data-piece="<%= @pieces.where(x_coord: column, y_coord: row).first.id%>">
                    <%= @pieces.where(x_coord: column, y_coord: row).first.image.html_safe %>
                  </span>
               <% end %>
            </div>
          <% end %>
        </div>
      <% end %>
    <% elsif @current_player.id == @game.black_player_id %>
      <% 0.upto(7) do |row| %>
        <div class="row <%= row.even? ? 'even' : 'odd' %>">
          <% 7.downto(0) do |column| %>
            <div class="square" data-x-coord="<%=column%>" data-y-coord="<%=row%>">
               <% if @pieces.where(x_coord: column, y_coord: row).present? %>
                  <span class="piece" data-piece="<%= @pieces.where(x_coord: column, y_coord: row).first.id%>">
                    <%= @pieces.where(x_coord: column, y_coord: row).first.image.html_safe %>
                  </span>
               <% end %>
            </div>
          <% end %>
        </div>
      <% end %>
    
    <% end %>
  </div>
    <div class="container">
      <% flash.each do |key, value| %>
        <div class="alert alert-<%= key %>"><%= value %></div>
      <% end %>
      <%= yield %>
    </div>
</section>

<div class="notices">
<%= link_to "Forfeit", root_path, class: 'btn btn-success' %>
  <p>Piece selected: <span id="selected-piece"></span></p>
  <p>Square selected: <span id="selected-square"></span></p>
  <p>Current Turn: <%= @game.current_turn %></p>
</div>


<script>
  $( function() {
    const loadFirebase = () => {
    var load_time_stamp = $('body').data('time-stamp');
    var gameID = "game" + $('.board').data('game-id');
    var fbRef = new Firebase('https://pancake-chess.firebaseio.com');
    var indexRef = fbRef.child(gameID);

    indexRef.on('value', function(snapshot) {
      data = snapshot.val();
      console.log(data);
      updated_time_stamp = data['time_stamp'];
      if (updated_time_stamp > load_time_stamp) {
        location.reload();
      }
    });
  };

  loadFirebase();

  // declare variables
  var square, piece;
  var selectedPieceID, selectedSquareXCoord, selectedSquareYCoord;

  // after clicking a piece get its id
  $(".piece").click(function (event) {
    
    piece = event.target;
    selectedPieceID = $(piece).attr("data-piece");
    selectedPieceXCoord = $(piece).parent().attr("data-x-coord");
    selectedPieceYCoord = $(piece).parent().attr("data-y-coord");
  // make selected piece draggable
    $(piece).draggable({ containment: ".board", grid: [50,50], revert: 'invalid', stack: piece});
    
  // set class of piece to selected
    $(".piece").removeClass("selected");
    $(piece).addClass("selected");
    // show it in the view
    $('#selected-piece').text(selectedPieceID);
    });

  // droppable
    $( ".square" ).droppable({
      accept: piece,
      drop: function( event ) {
        square = event.target;
        
        selectedSquareXCoord = $(square).attr("data-x-coord");
        selectedSquareYCoord = $(square).attr("data-y-coord");
        
        $(".square").removeClass("selected");
        $(square).addClass("selected");
        
        // show it in the view
        $('#selected-square').text('x: ' + selectedSquareXCoord + ', y: ' + selectedSquareYCoord);
      
        if (selectedPieceXCoord != selectedSquareXCoord || selectedPieceYCoord != selectedSquareYCoord) {
            submitMove(selectedPieceID, selectedSquareXCoord, selectedSquareYCoord)
        }
    
      }
    });
    const submitMove = (pieceID, x, y) => {
    $.ajax({
      type: 'PATCH',
      // required, otherwise 'Can't verify CSRF token authenticity' error
      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
      url: '/pieces/' + pieceID,
      dataType: 'json',
      data: {
        id: pieceID,
        x_coord: x,
        y_coord: y
      },
      success: function(data) {
        $(location).attr('href', data.update_url);
      }
    });
  }
  } );
</script>